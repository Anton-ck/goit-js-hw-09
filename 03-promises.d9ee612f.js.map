{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,gBAAiBF,SAASC,cAAc,kBACxCE,eAAgBH,SAASC,cAAc,iBACvCG,WAAYJ,SAASC,cAAc,oBAG/BI,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAoCbT,EAAKC,KAAKgB,iBAAiB,UAhCAC,IACzBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOrB,EAAKI,gBAAgBkB,OACzCC,EAAOF,OAAOrB,EAAKK,eAAeiB,OAClCE,EAASH,OAAOrB,EAAKM,WAAWgB,OAEpC,IAAKF,IAAeG,IAASC,EAC3B,OAAQC,EAAA3B,GAAS4B,OAAOC,QACtB,OACA,sBACA,MAIJ,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CAGnCrB,EAAcqB,EAFKR,EAAaG,EAAOK,GAGpCC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA3B,GAASgC,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA3B,GAASgC,OAAOH,QACd,sBAAoBnB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  delayStepInput: document.querySelector('[name=\"step\"]'),\n  amoutInput: document.querySelector('[name=\"amount\"]')\n};\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst generatorPromices = (e) => {\n  e.preventDefault();\n\n  let valueDelay = Number(refs.firstDelayInput.value);\n  let step = Number(refs.delayStepInput.value);\n  let amount = Number(refs.amoutInput.value);\n\n  if (!valueDelay || !step || !amount) { \n    return  Notiflix.Report.failure(\n      'Fuck',\n      'Fill all the fields',\n      'OK'\n       );\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    let promiseDelay = valueDelay + step * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n};\n\nrefs.form.addEventListener('submit', generatorPromices);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstDelayInput","delayStepInput","amoutInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","valueDelay","Number","value","step","amount","$parcel$interopDefault","Report","failure","i","then","Notify","success","catch"],"version":3,"file":"03-promises.d9ee612f.js.map"}